{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AC\\\\Desktop\\\\ReactProjects\\\\Amazon\\\\amazon-clone-redux\\\\src\\\\pages\\\\payment-page\\\\payment-page.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { clearCart } from \"../../redux/cart/cart.action\";\nimport Popup from \"../../components/popup/popup.component\";\nimport HeaderImage1 from \"../../assets/address-page-heade1.png\";\nimport CheckOutPaymentItem from \"../../components/checkout-payment-item/checkout-payment-item.component\";\nimport Subtotal from \"../../components/subtotal/subtotal.component\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport axios from \"../../axios/axios\";\nimport { selectCartItems, selectCartTotal, selectCartItemCount } from \"../../redux/cart/cart.selectors\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport \"./payment-page.styles.css\";\nimport { createStructuredSelector } from \"reselect\";\nimport { db } from \"../../firebase/firebase\";\nimport { ComponentContainer, ComponentSubContainer, LeftSide, Header, Title, Input, NameContainer, Button, CheckoutCard, SubtotalContainer, CardElementContainer } from \"./payment-page.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentPage = ({\n  history,\n  match,\n  clearCart,\n  currentUser,\n  total,\n  cartItems,\n  itemCount\n}) => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(\"\");\n  const [succeeded, setSucceeded] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(true);\n  const [popup, setPopup] = useState(false);\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [dataForm, setDataForm] = useState(\"\");\n  useEffect(() => {\n    const getClientSecret = async () => {\n      const response = await axios({\n        method: \"post\",\n        url: `/payments/create?total=${total * 100}`\n      });\n      setClientSecret(response.data.clientSecret);\n    };\n\n    getClientSecret();\n  }, [total]);\n\n  const handleChange = event => {\n    console.log(\"dataForm\", dataForm);\n    const {\n      name,\n      value\n    } = event.target;\n    setDataForm({ ...dataForm,\n      [name]: value\n    });\n  };\n\n  const onFormSubmit = async data => {\n    setDataForm(data);\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    }).then(({\n      paymentIntent\n    }) => {\n      db.collection(\"users\").doc(currentUser === null || currentUser === void 0 ? void 0 : currentUser.id).collection(\"orders\").doc(paymentIntent.id).set({\n        cartItems: [{\n          id: cartItems[0].id,\n          descriptionTitle: cartItems[0].descriptionTitle,\n          imageUrl: cartItems[0].imageUrl,\n          price: cartItems[0].price,\n          quantity: cartItems[0].quantity,\n          rating: cartItems[0].rating\n        }],\n        amount: paymentIntent.amount,\n        created: paymentIntent.created\n      });\n      setSucceeded(true);\n      setError(null);\n      setProcessing(false);\n      clearCart();\n    });\n    setPopup(true);\n    setTimeout(() => {\n      setPopup(false);\n      history.replace(\"/orders\");\n    }, 3000);\n  };\n\n  const onErrors = errors => alert(\"Complete the form\");\n\n  const iframeStyles = {\n    base: {\n      color: \"#000000\",\n      fontSize: \"16px\",\n      iconColor: \"#fff\",\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#FFC7EE\",\n      color: \"#FFC7EE\"\n    },\n    complete: {\n      iconColor: \"#cbf4c9\"\n    }\n  };\n  const cardElementOpts = {\n    iconStyle: \"solid\",\n    style: iframeStyles,\n    hidePostalCode: true\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paymentPage__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paymentPage__subContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paymentPage__firstRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paymentPage__header\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"\",\n            src: HeaderImage1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"paymentPage__title\",\n            children: \"Select payment method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onFormSubmit, onErrors),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nameContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"cardName\", {\n                required: true\n              }),\n              onChange: handleChange,\n              type: \"text\",\n              placeholder: \"\",\n              name: \"cardName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Card Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardElementContainer, {\n              children: /*#__PURE__*/_jsxDEV(CardElement, {\n                options: cardElementOpts\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"paymentPage__button\",\n            type: \"submit\",\n            value: \"Submit Form\",\n            children: \"Place order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Popup, {\n            trigger: popup,\n            setTrigger: setPopup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paymentItem__leftColumn\",\n      children: [cartItems.map(item => {\n        return /*#__PURE__*/_jsxDEV(CheckOutPaymentItem, {\n          cartItem: item,\n          history: history,\n          match: match\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment__subtotal\",\n        children: `Subtotal: (${itemCount} items): ${Math.round(total).toFixed(2)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaymentPage, \"/ugJkeNarQLxy40GILGV0ROAPac=\", false, function () {\n  return [useStripe, useElements, useForm];\n});\n\n_c = PaymentPage;\n\nconst mapDispatchToProps = dispatch => ({\n  clearCart: () => dispatch(clearCart())\n});\n\nconst mapStateToProps = () => createStructuredSelector({\n  currentUser: selectCurrentUser,\n  itemCount: selectCartItemCount,\n  total: selectCartTotal,\n  cartItems: selectCartItems\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PaymentPage));\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"sources":["C:/Users/AC/Desktop/ReactProjects/Amazon/amazon-clone-redux/src/pages/payment-page/payment-page.component.js"],"names":["React","useState","useEffect","useForm","withRouter","connect","clearCart","Popup","HeaderImage1","CheckOutPaymentItem","Subtotal","CardElement","useStripe","useElements","axios","selectCartItems","selectCartTotal","selectCartItemCount","selectCurrentUser","createStructuredSelector","db","ComponentContainer","ComponentSubContainer","LeftSide","Header","Title","Input","NameContainer","Button","CheckoutCard","SubtotalContainer","CardElementContainer","PaymentPage","history","match","currentUser","total","cartItems","itemCount","stripe","elements","error","setError","processing","setProcessing","succeeded","setSucceeded","disabled","setDisabled","clientSecret","setClientSecret","popup","setPopup","register","handleSubmit","dataForm","setDataForm","getClientSecret","response","method","url","data","handleChange","event","console","log","name","value","target","onFormSubmit","payload","confirmCardPayment","payment_method","card","getElement","then","paymentIntent","collection","doc","id","set","descriptionTitle","imageUrl","price","quantity","rating","amount","created","setTimeout","replace","onErrors","errors","alert","iframeStyles","base","color","fontSize","iconColor","invalid","complete","cardElementOpts","iconStyle","style","hidePostalCode","required","map","item","Math","round","toFixed","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { clearCart } from \"../../redux/cart/cart.action\";\r\n\r\nimport Popup from \"../../components/popup/popup.component\";\r\nimport HeaderImage1 from \"../../assets/address-page-heade1.png\";\r\nimport CheckOutPaymentItem from \"../../components/checkout-payment-item/checkout-payment-item.component\";\r\nimport Subtotal from \"../../components/subtotal/subtotal.component\";\r\n\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport axios from \"../../axios/axios\";\r\n\r\nimport {\r\n  selectCartItems,\r\n  selectCartTotal,\r\n  selectCartItemCount,\r\n} from \"../../redux/cart/cart.selectors\";\r\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\r\n\r\nimport \"./payment-page.styles.css\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { db } from \"../../firebase/firebase\";\r\n\r\nimport {\r\n  ComponentContainer,\r\n  ComponentSubContainer,\r\n  LeftSide,\r\n  Header,\r\n  Title,\r\n  Input,\r\n  NameContainer,\r\n  Button,\r\n  CheckoutCard,\r\n  SubtotalContainer,\r\n  CardElementContainer,\r\n} from \"./payment-page.styles\";\r\n\r\nconst PaymentPage = ({\r\n  history,\r\n  match,\r\n  clearCart,\r\n  currentUser,\r\n  total,\r\n  cartItems,\r\n  itemCount,\r\n}) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [error, setError] = useState(null);\r\n  const [processing, setProcessing] = useState(\"\");\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState(true);\r\n  const [popup, setPopup] = useState(false);\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const [dataForm, setDataForm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const getClientSecret = async () => {\r\n      const response = await axios({\r\n        method: \"post\",\r\n        url: `/payments/create?total=${total * 100}`,\r\n      });\r\n      setClientSecret(response.data.clientSecret);\r\n    };\r\n    getClientSecret();\r\n  }, [total]);\r\n\r\n  const handleChange = (event) => {\r\n    console.log(\"dataForm\", dataForm);\r\n    const { name, value } = event.target;\r\n    setDataForm({ ...dataForm, [name]: value });\r\n  };\r\n\r\n  const onFormSubmit = async (data) => {\r\n    setDataForm(data);\r\n    setProcessing(true);\r\n\r\n    const payload = await stripe\r\n      .confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n        },\r\n      })\r\n      .then(({ paymentIntent }) => {\r\n        db.collection(\"users\")\r\n          .doc(currentUser?.id)\r\n          .collection(\"orders\")\r\n          .doc(paymentIntent.id)\r\n          .set({\r\n            cartItems: [\r\n              {\r\n                id: cartItems[0].id,\r\n                descriptionTitle: cartItems[0].descriptionTitle,\r\n                imageUrl: cartItems[0].imageUrl,\r\n                price: cartItems[0].price,\r\n                quantity: cartItems[0].quantity,\r\n                rating: cartItems[0].rating,\r\n              },\r\n            ],\r\n            amount: paymentIntent.amount,\r\n            created: paymentIntent.created,\r\n          });\r\n\r\n        setSucceeded(true);\r\n        setError(null);\r\n        setProcessing(false);\r\n\r\n        clearCart();\r\n      });\r\n\r\n    setPopup(true);\r\n    setTimeout(() => {\r\n      setPopup(false);\r\n      history.replace(\"/orders\");\r\n    }, 3000);\r\n  };\r\n\r\n  const onErrors = (errors) => alert(\"Complete the form\");\r\n\r\n  const iframeStyles = {\r\n    base: {\r\n      color: \"#000000\",\r\n\r\n      fontSize: \"16px\",\r\n      iconColor: \"#fff\",\r\n      \"::placeholder\": {\r\n        color: \"#87bbfd\",\r\n      },\r\n    },\r\n    invalid: {\r\n      iconColor: \"#FFC7EE\",\r\n      color: \"#FFC7EE\",\r\n    },\r\n    complete: {\r\n      iconColor: \"#cbf4c9\",\r\n    },\r\n  };\r\n\r\n  const cardElementOpts = {\r\n    iconStyle: \"solid\",\r\n    style: iframeStyles,\r\n    hidePostalCode: true,\r\n  };\r\n\r\n  return (\r\n    <div className=\"paymentPage__container\">\r\n      <div className=\"paymentPage__subContainer\">\r\n        <div className=\"paymentPage__firstRow\">\r\n          <div className=\"paymentPage__header\">\r\n            <img alt=\"\" src={HeaderImage1}></img>\r\n            <h1 className=\"paymentPage__title\">Select payment method</h1>\r\n          </div>\r\n          <form onSubmit={handleSubmit(onFormSubmit, onErrors)}>\r\n            <div className=\"nameContainer\">\r\n              <span>Full Name</span>\r\n              <input\r\n                {...register(\"cardName\", { required: true })}\r\n                onChange={handleChange}\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                name=\"cardName\"\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <span>Card Information</span>\r\n              <CardElementContainer>\r\n                <CardElement options={cardElementOpts} />\r\n              </CardElementContainer>\r\n            </div>\r\n\r\n            <button\r\n              className=\"paymentPage__button\"\r\n              type=\"submit\"\r\n              value=\"Submit Form\"\r\n            >\r\n              Place order\r\n            </button>\r\n            <Popup trigger={popup} setTrigger={setPopup} />\r\n          </form>\r\n        </div>\r\n        {/* <div className=\"paymentPage__buttonContainer\"></div> */}\r\n      </div>\r\n\r\n      <div className=\"paymentItem__leftColumn\">\r\n        {cartItems.map((item) => {\r\n          return (\r\n            <CheckOutPaymentItem\r\n              key={item.id}\r\n              cartItem={item}\r\n              history={history}\r\n              match={match}\r\n            />\r\n          );\r\n        })}\r\n        <div className=\"payment__subtotal\">\r\n          {`Subtotal: (${itemCount} items): ${Math.round(total).toFixed(2)}`}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  clearCart: () => dispatch(clearCart()),\r\n});\r\n\r\nconst mapStateToProps = () =>\r\n  createStructuredSelector({\r\n    currentUser: selectCurrentUser,\r\n    itemCount: selectCartItemCount,\r\n    total: selectCartTotal,\r\n    cartItems: selectCartItems,\r\n  });\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(PaymentPage)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}