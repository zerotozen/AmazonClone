{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AC\\\\Desktop\\\\ReactProjects\\\\Amazon\\\\amazon-clone-redux\\\\src\\\\components\\\\order\\\\order.component.js\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport OrdersCard from \"../orders-card/orders-card.component\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { ComponentContainer, OrderId, Total } from \"./order.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Order({\n  order\n}) {\n  var _order$data$cartItems;\n\n  return /*#__PURE__*/_jsxDEV(ComponentContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: moment.unix(order.data.created).format(\"MMMM Do YYYY, h:mma\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrderId, {\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: order.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), (_order$data$cartItems = order.data.cartItems) === null || _order$data$cartItems === void 0 ? void 0 : _order$data$cartItems.map(item => /*#__PURE__*/_jsxDEV(OrdersCard, {\n      id: item.id,\n      descriptionTitle: item.descriptionTitle,\n      imageUrl: item.imageUrl,\n      price: item.price,\n      rating: item.rating,\n      cartItem: item.cartItem,\n      quantity: item.quantity,\n      hideButton: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(CurrencyFormat, {\n      renderText: value => /*#__PURE__*/_jsxDEV(Total, {\n        children: [\"Order Total: \", value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 32\n      }, this),\n      decimalScale: 2,\n      value: order.data.amount / 100,\n      displayType: \"text\",\n      thousandSeparator: true,\n      prefix: \"€\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Order;\nexport default Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["C:/Users/AC/Desktop/ReactProjects/Amazon/amazon-clone-redux/src/components/order/order.component.js"],"names":["React","moment","OrdersCard","CurrencyFormat","ComponentContainer","OrderId","Total","Order","order","unix","data","created","format","id","cartItems","map","item","descriptionTitle","imageUrl","price","rating","cartItem","quantity","value","amount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AAEA,SAASC,kBAAT,EAA6BC,OAA7B,EAAsCC,KAAtC,QAAmD,gBAAnD;;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA0B;AAAA;;AACxB,sBACE,QAAC,kBAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIP,MAAM,CAACQ,IAAP,CAAYD,KAAK,CAACE,IAAN,CAAWC,OAAvB,EAAgCC,MAAhC,CAAuC,qBAAvC;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,OAAD;AAAA,6BACE;AAAA,kBAAQJ,KAAK,CAACK;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,2BAMGL,KAAK,CAACE,IAAN,CAAWI,SANd,0DAMG,sBAAsBC,GAAtB,CAA2BC,IAAD,iBACzB,QAAC,UAAD;AACE,MAAA,EAAE,EAAEA,IAAI,CAACH,EADX;AAEE,MAAA,gBAAgB,EAAEG,IAAI,CAACC,gBAFzB;AAGE,MAAA,QAAQ,EAAED,IAAI,CAACE,QAHjB;AAIE,MAAA,KAAK,EAAEF,IAAI,CAACG,KAJd;AAKE,MAAA,MAAM,EAAEH,IAAI,CAACI,MALf;AAME,MAAA,QAAQ,EAAEJ,IAAI,CAACK,QANjB;AAOE,MAAA,QAAQ,EAAEL,IAAI,CAACM,QAPjB;AAQE,MAAA,UAAU;AARZ;AAAA;AAAA;AAAA;AAAA,YADD,CANH,eAkBE,QAAC,cAAD;AACE,MAAA,UAAU,EAAGC,KAAD,iBAAW,QAAC,KAAD;AAAA,oCAAqBA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cADzB;AAEE,MAAA,YAAY,EAAE,CAFhB;AAGE,MAAA,KAAK,EAAEf,KAAK,CAACE,IAAN,CAAWc,MAAX,GAAoB,GAH7B;AAIE,MAAA,WAAW,EAAE,MAJf;AAKE,MAAA,iBAAiB,EAAE,IALrB;AAME,MAAA,MAAM,EAAE;AANV;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;KA9BQjB,K;AAgCT,eAAeA,KAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport OrdersCard from \"../orders-card/orders-card.component\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\n\r\nimport { ComponentContainer, OrderId, Total } from \"./order.styles\";\r\n\r\nfunction Order({ order }) {\r\n  return (\r\n    <ComponentContainer>\r\n      <h2>Order</h2>\r\n      <p>{moment.unix(order.data.created).format(\"MMMM Do YYYY, h:mma\")}</p>\r\n      <OrderId>\r\n        <small>{order.id}</small>\r\n      </OrderId>\r\n      {order.data.cartItems?.map((item) => (\r\n        <OrdersCard\r\n          id={item.id}\r\n          descriptionTitle={item.descriptionTitle}\r\n          imageUrl={item.imageUrl}\r\n          price={item.price}\r\n          rating={item.rating}\r\n          cartItem={item.cartItem}\r\n          quantity={item.quantity}\r\n          hideButton\r\n        />\r\n      ))}\r\n      <CurrencyFormat\r\n        renderText={(value) => <Total>Order Total: {value}</Total>}\r\n        decimalScale={2}\r\n        value={order.data.amount / 100}\r\n        displayType={\"text\"}\r\n        thousandSeparator={true}\r\n        prefix={\"€\"}\r\n      />\r\n    </ComponentContainer>\r\n  );\r\n}\r\n\r\nexport default Order;\r\n"]},"metadata":{},"sourceType":"module"}