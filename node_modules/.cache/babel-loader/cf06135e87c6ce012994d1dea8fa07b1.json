{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst selectProduct = state => state.product;\n\nexport const selectCollections = createSelector([selectProduct], product => {\n  console.log(\"Product\", product);\n  return product.collections.items;\n});\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => {\n  return collections ? Object.keys(collections).map(key => collections[key]) : [];\n});\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => {\n  console.log(\"collenctions[collectionUrlParam\", collections[collectionUrlParam]);\n  return collections ? collections[collectionUrlParam] : null;\n});\nexport const selectIsCollectionFetching = createSelector([selectProduct], shop => shop.isFetching);\nexport const selectIsCollectionsLoaded = createSelector([selectProduct], shop => !!shop.collections);","map":{"version":3,"sources":["C:/Users/AC/Desktop/ReactProjects/Amazon/amazon-clone-redux/src/redux/products/product.selectors.js"],"names":["createSelector","selectProduct","state","product","selectCollections","console","log","collections","items","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","shop","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAWA,KAAK,CAACC,OAAvC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAAC,CAACC,aAAD,CAAD,EAAmBE,OAAD,IAAa;AAC5EE,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,OAAvB;AACA,SAAOA,OAAO,CAACI,WAAR,CAAoBC,KAA3B;AACD,CAH8C,CAAxC;AAKP,OAAO,MAAMC,2BAA2B,GAAGT,cAAc,CACvD,CAACI,iBAAD,CADuD,EAEtDG,WAAD,IAAiB;AACf,SAAOA,WAAW,GACdG,MAAM,CAACC,IAAP,CAAYJ,WAAZ,EAAyBK,GAAzB,CAA8BC,GAAD,IAASN,WAAW,CAACM,GAAD,CAAjD,CADc,GAEd,EAFJ;AAGD,CANsD,CAAlD;AASP,OAAO,MAAMC,gBAAgB,GAAIC,kBAAD,IAC9Bf,cAAc,CAAC,CAACI,iBAAD,CAAD,EAAuBG,WAAD,IAAiB;AACnDF,EAAAA,OAAO,CAACC,GAAR,CACE,iCADF,EAEEC,WAAW,CAACQ,kBAAD,CAFb;AAIA,SAAOR,WAAW,GAAGA,WAAW,CAACQ,kBAAD,CAAd,GAAqC,IAAvD;AACD,CANa,CADT;AASP,OAAO,MAAMC,0BAA0B,GAAGhB,cAAc,CACtD,CAACC,aAAD,CADsD,EAErDgB,IAAD,IAAUA,IAAI,CAACC,UAFuC,CAAjD;AAKP,OAAO,MAAMC,yBAAyB,GAAGnB,cAAc,CACrD,CAACC,aAAD,CADqD,EAEpDgB,IAAD,IAAU,CAAC,CAACA,IAAI,CAACV,WAFoC,CAAhD","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nconst selectProduct = (state) => state.product;\r\n\r\nexport const selectCollections = createSelector([selectProduct], (product) => {\r\n  console.log(\"Product\", product);\r\n  return product.collections.items;\r\n});\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  (collections) => {\r\n    return collections\r\n      ? Object.keys(collections).map((key) => collections[key])\r\n      : [];\r\n  }\r\n);\r\n\r\nexport const selectCollection = (collectionUrlParam) =>\r\n  createSelector([selectCollections], (collections) => {\r\n    console.log(\r\n      \"collenctions[collectionUrlParam\",\r\n      collections[collectionUrlParam]\r\n    );\r\n    return collections ? collections[collectionUrlParam] : null;\r\n  });\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n  [selectProduct],\r\n  (shop) => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n  [selectProduct],\r\n  (shop) => !!shop.collections\r\n);\r\n"]},"metadata":{},"sourceType":"module"}