{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AC\\\\Desktop\\\\ReactProjects\\\\Amazon\\\\amazon-clone-redux\\\\src\\\\context\\\\amazon-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AmazonContext = /*#__PURE__*/React.createContext();\nexport function useAmazonContext() {\n  _s();\n\n  return useContext(AmazonContext);\n}\n\n_s(useAmazonContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AmazonContextProvider(props) {\n  _s2();\n\n  //Responsible for opening and closing the sub container\n  const [subContainer, setSubContainer] = useState(false); //Responsible for storing the subContainers entries\n\n  const [subContainerEntries, setSubContainerEntries] = useState(null); //Responsible for holding all of the data that goes into the navbar\n\n  const [entryStore, setEntryStore] = useState(null);\n  useEffect(() => {\n    fetch(\"https://amazon-navbar.herokuapp.com/fetch\").then(data => data.json()).then(response => {\n      setEntryStore(response);\n    });\n  }, []);\n  const value = {\n    subContainer,\n    setSubContainer,\n    subContainerEntries,\n    setSubContainerEntries,\n    entryStore,\n    setEntryStore\n  };\n  return /*#__PURE__*/_jsxDEV(AmazonContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AmazonContextProvider, \"AqPOmqoTdVGy0cMzosYfFfdO/2E=\");\n\n_c = AmazonContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AmazonContextProvider\");","map":{"version":3,"sources":["C:/Users/AC/Desktop/ReactProjects/Amazon/amazon-clone-redux/src/context/amazon-context.js"],"names":["React","useContext","useState","useEffect","AmazonContext","createContext","useAmazonContext","AmazonContextProvider","props","subContainer","setSubContainer","subContainerEntries","setSubContainerEntries","entryStore","setEntryStore","fetch","then","data","json","response","value","children"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;;AAEA,MAAMC,aAAa,gBAAGJ,KAAK,CAACK,aAAN,EAAtB;AAEA,OAAO,SAASC,gBAAT,GAA4B;AAAA;;AACjC,SAAOL,UAAU,CAACG,aAAD,CAAjB;AACD;;GAFeE,gB;;AAIhB,OAAO,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAAA;;AAC3C;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD,CAF2C,CAG3C;;AACA,QAAM,CAACS,mBAAD,EAAsBC,sBAAtB,IAAgDV,QAAQ,CAAC,IAAD,CAA9D,CAJ2C,CAK3C;;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,IAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESG,QAAD,IAAc;AAClBL,MAAAA,aAAa,CAACK,QAAD,CAAb;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,QAAMC,KAAK,GAAG;AACZX,IAAAA,YADY;AAEZC,IAAAA,eAFY;AAGZC,IAAAA,mBAHY;AAIZC,IAAAA,sBAJY;AAKZC,IAAAA,UALY;AAMZC,IAAAA;AANY,GAAd;AASA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEM,KAA/B;AAAA,cACGZ,KAAK,CAACa;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IA9Bed,qB;;KAAAA,qB","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\n\r\nconst AmazonContext = React.createContext();\r\n\r\nexport function useAmazonContext() {\r\n  return useContext(AmazonContext);\r\n}\r\n\r\nexport function AmazonContextProvider(props) {\r\n  //Responsible for opening and closing the sub container\r\n  const [subContainer, setSubContainer] = useState(false);\r\n  //Responsible for storing the subContainers entries\r\n  const [subContainerEntries, setSubContainerEntries] = useState(null);\r\n  //Responsible for holding all of the data that goes into the navbar\r\n  const [entryStore, setEntryStore] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://amazon-navbar.herokuapp.com/fetch\")\r\n      .then((data) => data.json())\r\n      .then((response) => {\r\n        setEntryStore(response);\r\n      });\r\n  }, []);\r\n\r\n  const value = {\r\n    subContainer,\r\n    setSubContainer,\r\n    subContainerEntries,\r\n    setSubContainerEntries,\r\n    entryStore,\r\n    setEntryStore,\r\n  };\r\n\r\n  return (\r\n    <AmazonContext.Provider value={value}>\r\n      {props.children}\r\n    </AmazonContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}