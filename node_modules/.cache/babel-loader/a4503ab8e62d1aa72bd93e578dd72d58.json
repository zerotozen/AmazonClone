{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector( //el primer valor es una coleccion de input selectors\n[selectCart], //retorna el valor que queremos del selector\ncart => cart.cartItems);\nexport const selectCartItemCount = createSelector([selectCartItems], cartItems => cartItems ? cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0) : \"\");\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems ? cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity * cartItem.price, 0) : \"\");","map":{"version":3,"sources":["C:/Users/AC/Desktop/ReactProjects/Amazon/amazon-clone-redux/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartItemCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,EAC3C;AACA,CAACC,UAAD,CAF2C,EAG3C;AACCE,IAAD,IAAUA,IAAI,CAACE,SAJ4B,CAAtC;AAOP,OAAO,MAAMC,mBAAmB,GAAGN,cAAc,CAC/C,CAACI,eAAD,CAD+C,EAE9CC,SAAD,IACEA,SAAS,GACLA,SAAS,CAACE,MAAV,CACE,CAACC,mBAAD,EAAsBC,QAAtB,KACED,mBAAmB,GAAGC,QAAQ,CAACC,QAFnC,EAGE,CAHF,CADK,GAML,EATyC,CAA1C;AAYP,OAAO,MAAMC,eAAe,GAAGX,cAAc,CAAC,CAACI,eAAD,CAAD,EAAqBC,SAAD,IAC/DA,SAAS,GACLA,SAAS,CAACE,MAAV,CACE,CAACC,mBAAD,EAAsBC,QAAtB,KACED,mBAAmB,GAAGC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACG,KAFvD,EAGE,CAHF,CADK,GAML,EAPuC,CAAtC","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nconst selectCart = (state) => state.cart;\r\n\r\nexport const selectCartItems = createSelector(\r\n  //el primer valor es una coleccion de input selectors\r\n  [selectCart],\r\n  //retorna el valor que queremos del selector\r\n  (cart) => cart.cartItems\r\n);\r\n\r\nexport const selectCartItemCount = createSelector(\r\n  [selectCartItems],\r\n  (cartItems) =>\r\n    cartItems\r\n      ? cartItems.reduce(\r\n          (accumulatedQuantity, cartItem) =>\r\n            accumulatedQuantity + cartItem.quantity,\r\n          0\r\n        )\r\n      : \"\"\r\n);\r\n\r\nexport const selectCartTotal = createSelector([selectCartItems], (cartItems) =>\r\n  cartItems\r\n    ? cartItems.reduce(\r\n        (accumulatedQuantity, cartItem) =>\r\n          accumulatedQuantity + cartItem.quantity * cartItem.price,\r\n        0\r\n      )\r\n    : \"\"\r\n);\r\n"]},"metadata":{},"sourceType":"module"}