{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AC\\\\Desktop\\\\ReactProjects\\\\Amazon\\\\amazon-clone-redux\\\\src\\\\pages\\\\address-page\\\\address-page.component.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport HeaderImage from \"../../assets/address-page-header.png\";\nimport AddressCard from \"../../components/address-card/address-card.component\";\nimport { connect } from \"react-redux\";\nimport { addAddress } from \"../../redux/address/address.action\";\nimport { countryOptions, stateOptions } from \"./address-page.data\";\nimport { withRouter } from \"react-router-dom\";\nimport { ComponentContainer, ComponentSubcontainer, HeaderContainer, Img, Title, LeftSide, RightSide, Span, InputContainer, Input, CountryInput, CityInput, StateInput, ZipInput, Button } from \"./address-page.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdressPage = ({\n  address,\n  addAddress,\n  history\n}) => {\n  _s();\n\n  const {\n    register,\n    control,\n    handleSubmit\n  } = useForm();\n\n  const onFormSubmit = data => {\n    addAddressData(data);\n    goPaymentPage(data);\n  };\n\n  const onErrors = errors => alert(\"Complete the form\");\n\n  const addAddressData = addressData => {\n    addAddress(addressData);\n  };\n\n  const goPaymentPage = addressData => {\n    if (addressData) {\n      history.push(\"/payment\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ComponentContainer, {\n    className: \"addressPage__container\",\n    children: /*#__PURE__*/_jsxDEV(ComponentSubcontainer, {\n      className: \"addressPage__subContainer\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderContainer, {\n        className: \"addressPage__header\",\n        children: /*#__PURE__*/_jsxDEV(Img, {\n          onClick: () => {\n            history.push(\"/\");\n          },\n          alt: \"\",\n          src: HeaderImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        className: \"addressPage__title\",\n        children: \"Select a shipping address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), address.address ? /*#__PURE__*/_jsxDEV(AddressCard, {\n        history: history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 28\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onFormSubmit, onErrors),\n        children: [/*#__PURE__*/_jsxDEV(LeftSide, {\n          className: \"addressPage__firstRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add new Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Span, {\n            children: \"Country/Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"country\",\n            control: control,\n            defaultValue: false,\n            rules: {\n              required: true\n            },\n            render: ({\n              field\n            }) => /*#__PURE__*/_jsxDEV(CountryInput, { ...field,\n              options: countryOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Span, {\n            children: \"Full name (First and Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, { ...register(\"name\", {\n              required: true\n            }),\n            type: \"text\",\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Span, {\n            children: \"Phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, { ...register(\"phone\", {\n              required: true\n            }),\n            type: \"text\",\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Span, {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, { ...register(\"nameStreet\", {\n              required: true\n            }),\n            type: \"text\",\n            placeholder: \"Street address or P.O. Box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"numberStreet\",\n            ...register(\"numberStreet\", {\n              required: true\n            }),\n            type: \"text\",\n            placeholder: \"Apt, suite, unit, building, floor, etc.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RightSide, {\n          children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Span, {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, { ...register(\"city\", {\n                required: true\n              }),\n              cityInput: true,\n              type: \"text\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Span, {\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"state\",\n              control: control,\n              defaultValue: false,\n              rules: {\n                required: true\n              },\n              render: ({\n                field\n              }) => /*#__PURE__*/_jsxDEV(StateInput, { ...field,\n                options: stateOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Span, {\n              children: \"ZIP Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, { ...register(\"zipCode\", {\n                required: true\n              }),\n              zipInput: true,\n              type: \"text\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          value: \"Submit Form\",\n          children: \"Use this Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdressPage, \"vP2j+0MVGCT9MTYEQgnzT9gMBf4=\", false, function () {\n  return [useForm];\n});\n\n_c = AdressPage;\n\nconst mapStateToProps = state => ({\n  address: state.address\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addAddress: address => dispatch(addAddress(address))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AdressPage));\n\nvar _c;\n\n$RefreshReg$(_c, \"AdressPage\");","map":{"version":3,"sources":["C:/Users/AC/Desktop/ReactProjects/Amazon/amazon-clone-redux/src/pages/address-page/address-page.component.js"],"names":["React","useForm","Controller","Select","HeaderImage","AddressCard","connect","addAddress","countryOptions","stateOptions","withRouter","ComponentContainer","ComponentSubcontainer","HeaderContainer","Img","Title","LeftSide","RightSide","Span","InputContainer","Input","CountryInput","CityInput","StateInput","ZipInput","Button","AdressPage","address","history","register","control","handleSubmit","onFormSubmit","data","addAddressData","goPaymentPage","onErrors","errors","alert","addressData","push","required","field","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Select from \"react-select\";\r\n\r\nimport HeaderImage from \"../../assets/address-page-header.png\";\r\nimport AddressCard from \"../../components/address-card/address-card.component\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { addAddress } from \"../../redux/address/address.action\";\r\n\r\nimport { countryOptions, stateOptions } from \"./address-page.data\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport {\r\n  ComponentContainer,\r\n  ComponentSubcontainer,\r\n  HeaderContainer,\r\n  Img,\r\n  Title,\r\n  LeftSide,\r\n  RightSide,\r\n  Span,\r\n  InputContainer,\r\n  Input,\r\n  CountryInput,\r\n  CityInput,\r\n  StateInput,\r\n  ZipInput,\r\n  Button,\r\n} from \"./address-page.styles\";\r\n\r\nconst AdressPage = ({ address, addAddress, history }) => {\r\n  const { register, control, handleSubmit } = useForm();\r\n\r\n  const onFormSubmit = (data) => {\r\n    addAddressData(data);\r\n    goPaymentPage(data);\r\n  };\r\n\r\n  const onErrors = (errors) => alert(\"Complete the form\");\r\n\r\n  const addAddressData = (addressData) => {\r\n    addAddress(addressData);\r\n  };\r\n\r\n  const goPaymentPage = (addressData) => {\r\n    if (addressData) {\r\n      history.push(\"/payment\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ComponentContainer className=\"addressPage__container\">\r\n      <ComponentSubcontainer className=\"addressPage__subContainer\">\r\n        <HeaderContainer className=\"addressPage__header\">\r\n          <Img\r\n            onClick={() => {\r\n              history.push(\"/\");\r\n            }}\r\n            alt=\"\"\r\n            src={HeaderImage}\r\n          ></Img>\r\n        </HeaderContainer>\r\n        <Title className=\"addressPage__title\">Select a shipping address</Title>\r\n        <hr />\r\n        {address.address ? <AddressCard history={history} /> : null}\r\n        <hr />\r\n        <form onSubmit={handleSubmit(onFormSubmit, onErrors)}>\r\n          <LeftSide className=\"addressPage__firstRow\">\r\n            <h3>Add new Address</h3>\r\n            <Span>Country/Region</Span>\r\n            <Controller\r\n              name=\"country\"\r\n              control={control}\r\n              defaultValue={false}\r\n              rules={{ required: true }}\r\n              render={({ field }) => (\r\n                <CountryInput {...field} options={countryOptions} />\r\n              )}\r\n            />\r\n            <Span>Full name (First and Last name</Span>\r\n            <Input\r\n              {...register(\"name\", { required: true })}\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n            ></Input>\r\n            <Span>Phone number</Span>\r\n            <Input\r\n              {...register(\"phone\", { required: true })}\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n            ></Input>\r\n            <Span>Address</Span>\r\n            <Input\r\n              {...register(\"nameStreet\", { required: true })}\r\n              type=\"text\"\r\n              placeholder=\"Street address or P.O. Box\"\r\n            ></Input>\r\n            <Input\r\n              name=\"numberStreet\"\r\n              {...register(\"numberStreet\", { required: true })}\r\n              type=\"text\"\r\n              placeholder=\"Apt, suite, unit, building, floor, etc.\"\r\n            ></Input>\r\n          </LeftSide>\r\n          <RightSide >\r\n            <InputContainer >\r\n              <Span>City</Span>\r\n              <Input\r\n                {...register(\"city\", { required: true })}\r\n                cityInput\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n              ></Input>\r\n            </InputContainer>\r\n            <InputContainer >\r\n              <Span>State</Span>\r\n              <Controller\r\n                name=\"state\"\r\n                control={control}\r\n                defaultValue={false}\r\n                rules={{ required: true }}\r\n                render={({ field }) => (\r\n                  <StateInput {...field} options={stateOptions} />\r\n                )}\r\n              />\r\n            </InputContainer>\r\n            <InputContainer>\r\n              <Span>ZIP Code</Span>\r\n              <Input\r\n                {...register(\"zipCode\", { required: true })}\r\n                zipInput\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n              ></Input>\r\n            </InputContainer>\r\n          </RightSide>\r\n          <Button\r\n            type=\"submit\"\r\n            value=\"Submit Form\"\r\n          >\r\n            Use this Address\r\n          </Button>\r\n        </form>\r\n        <div ></div>\r\n      </ComponentSubcontainer>\r\n    </ComponentContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  address: state.address,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addAddress: (address) => dispatch(addAddress(address)),\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(AdressPage)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}