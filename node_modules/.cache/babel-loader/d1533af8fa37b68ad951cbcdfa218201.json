{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AC\\\\Desktop\\\\ReactProjects\\\\Amazon\\\\amazon-clone-redux\\\\src\\\\pages\\\\payment-page\\\\payment-page.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { clearCart } from \"../../redux/cart/cart.action\";\nimport Popup from \"../../components/popup/popup.component\";\nimport HeaderImage1 from \"../../assets/address-page-heade1.png\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport axios from \"../../axios/axios\";\nimport { selectCartTotal } from \"../../redux/cart/cart.selectors\";\nimport \"./payment-page.styles.css\";\nimport { createStructuredSelector } from \"reselect\";\nimport { db } from \"../Firebase/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentPage = ({\n  history,\n  clearCart,\n  total\n}) => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(\"\");\n  const [succeeded, setSucceeded] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(true);\n  const [popup, setPopup] = useState(false);\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  const onFormSubmit = async data => {\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    }).then(({\n      paymentIntent\n    }) => {\n      var _currentUser;\n\n      //paymentIntent = payment confirmation\n      db.collection('users').doc((_currentUser = currentUser) === null || _currentUser === void 0 ? void 0 : _currentUser.uid).collection('orders').doc(paymentIntent.id).set({\n        cart: cart,\n        amount: paymentIntent.amount,\n        created: paymentIntent.created\n      });\n      setSucceeded(true);\n      setError(null);\n      setProcessing(false);\n    });\n    setPopup(true);\n    setTimeout(() => {\n      setPopup(false);\n      history.push(\"/\");\n    }, 3000);\n  };\n\n  const onErrors = errors => alert(\"Complete the form\");\n\n  useEffect(() => {\n    //algo aqui\n    const getClientSecret = async () => {\n      const response = await axios({\n        method: \"post\",\n        url: `/payment/create?total=${total * 100}`\n      });\n      setClientSecret(response.data.clientSecret);\n    };\n\n    getClientSecret();\n  }, []);\n  console.log(\"THE SECRETTTTT\", clientSecret);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paymentPage__container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paymentPage__subContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addressPage__header\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: HeaderImage1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"paymentPage__title\",\n        children: \"Select payment method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onFormSubmit, onErrors),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paymentPage__firstRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Name on Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"name\", {\n              required: true\n            }),\n            type: \"text\",\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Card Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"phone\", {\n              required: true\n            }),\n            type: \"text\",\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Expiration Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"expireDate__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expireDate__month\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"nameStreet\", {\n                  required: true\n                }),\n                type: \"text\",\n                placeholder: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expireDate__year\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"nameStreet\", {\n                  required: true\n                }),\n                type: \"text\",\n                placeholder: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paymentPage__secondRow\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"paymentPage__inputContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"CCV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"city\", {\n                required: true\n              }),\n              className: \"paymentPage__cityInput\",\n              type: \"text\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => clearCart(),\n          className: \"paymentPage__button\",\n          type: \"submit\",\n          value: \"Submit Form\",\n          children: \"Place order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Popup, {\n          trigger: popup,\n          setTrigger: setPopup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n          className: \"card__element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paymentPage__buttonContainer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaymentPage, \"y6xmc8NMZMT26GwnpnbrCHFCaAI=\", false, function () {\n  return [useStripe, useElements, useForm];\n});\n\n_c = PaymentPage;\n\nconst mapDispatchToProps = dispatch => ({\n  clearCart: () => dispatch(clearCart())\n});\n\nconst mapStateToProps = () => createStructuredSelector({\n  total: selectCartTotal\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PaymentPage));\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"sources":["C:/Users/AC/Desktop/ReactProjects/Amazon/amazon-clone-redux/src/pages/payment-page/payment-page.component.js"],"names":["React","useState","useEffect","useForm","withRouter","connect","clearCart","Popup","HeaderImage1","CardElement","useStripe","useElements","axios","selectCartTotal","createStructuredSelector","db","PaymentPage","history","total","stripe","elements","error","setError","processing","setProcessing","succeeded","setSucceeded","disabled","setDisabled","clientSecret","setClientSecret","popup","setPopup","register","handleSubmit","onFormSubmit","data","payload","confirmCardPayment","payment_method","card","getElement","then","paymentIntent","collection","doc","currentUser","uid","id","set","cart","amount","created","setTimeout","push","onErrors","errors","alert","getClientSecret","response","method","url","console","log","required","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { clearCart } from \"../../redux/cart/cart.action\";\r\n\r\nimport Popup from \"../../components/popup/popup.component\";\r\nimport HeaderImage1 from \"../../assets/address-page-heade1.png\";\r\n\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport axios from \"../../axios/axios\";\r\n\r\nimport { selectCartTotal } from \"../../redux/cart/cart.selectors\";\r\n\r\nimport \"./payment-page.styles.css\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { db } from \"../Firebase/firebase\";\r\n\r\nconst PaymentPage = ({ history, clearCart, total }) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [error, setError] = useState(null);\r\n  const [processing, setProcessing] = useState(\"\");\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState(true);\r\n\r\n  const [popup, setPopup] = useState(false);\r\n  const { register, handleSubmit } = useForm();\r\n  const onFormSubmit = async (data) => {\r\n    const payload = await stripe\r\n      .confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n        },\r\n      })\r\n      .then(({ paymentIntent }) => {\r\n        //paymentIntent = payment confirmation\r\n\r\n        db\r\n              .collection('users')\r\n              .doc(currentUser?.uid)\r\n              .collection('orders')\r\n              .doc(paymentIntent.id)\r\n              .set({\r\n                  cart: cart,\r\n                  amount: paymentIntent.amount,\r\n                  created: paymentIntent.created\r\n              })\r\n\r\n        setSucceeded(true);\r\n        setError(null);\r\n        setProcessing(false);\r\n      });\r\n\r\n    setPopup(true);\r\n    setTimeout(() => {\r\n      setPopup(false);\r\n      history.push(\"/\");\r\n    }, 3000);\r\n  };\r\n\r\n  const onErrors = (errors) => alert(\"Complete the form\");\r\n\r\n  useEffect(() => {\r\n    //algo aqui\r\n    const getClientSecret = async () => {\r\n      const response = await axios({\r\n        method: \"post\",\r\n        url: `/payment/create?total=${total * 100}`,\r\n      });\r\n      setClientSecret(response.data.clientSecret);\r\n    };\r\n    getClientSecret();\r\n  }, []);\r\n  console.log(\"THE SECRETTTTT\", clientSecret);\r\n  return (\r\n    <div className=\"paymentPage__container\">\r\n      <div className=\"paymentPage__subContainer\">\r\n        <div className=\"addressPage__header\">\r\n          <img alt=\"\" src={HeaderImage1}></img>\r\n        </div>\r\n        <h1 className=\"paymentPage__title\">Select payment method</h1>\r\n        <hr />\r\n        {}\r\n        <hr />\r\n        <form onSubmit={handleSubmit(onFormSubmit, onErrors)}>\r\n          <div className=\"paymentPage__firstRow\">\r\n            <span>Name on Card</span>\r\n            <input\r\n              {...register(\"name\", { required: true })}\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n            ></input>\r\n            <span>Card Number</span>\r\n            <input\r\n              {...register(\"phone\", { required: true })}\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n            ></input>\r\n            <span>Expiration Date</span>\r\n            <div className=\"expireDate__container\">\r\n              <div className=\"expireDate__month\">\r\n                <span>Month</span>\r\n                <input\r\n                  {...register(\"nameStreet\", { required: true })}\r\n                  type=\"text\"\r\n                  placeholder=\"\"\r\n                ></input>\r\n              </div>\r\n              <div className=\"expireDate__year\">\r\n                <span>Year</span>\r\n                <input\r\n                  {...register(\"nameStreet\", { required: true })}\r\n                  type=\"text\"\r\n                  placeholder=\"\"\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"paymentPage__secondRow\">\r\n            <div className=\"paymentPage__inputContainer\">\r\n              <span>CCV</span>\r\n              <input\r\n                {...register(\"city\", { required: true })}\r\n                className=\"paymentPage__cityInput\"\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={() => clearCart()}\r\n            className=\"paymentPage__button\"\r\n            type=\"submit\"\r\n            value=\"Submit Form\"\r\n          >\r\n            Place order\r\n          </button>\r\n          <Popup trigger={popup} setTrigger={setPopup} />\r\n\r\n          <CardElement className=\"card__element\" />\r\n        </form>\r\n        <div className=\"paymentPage__buttonContainer\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  clearCart: () => dispatch(clearCart()),\r\n});\r\n\r\nconst mapStateToProps = () =>\r\n  createStructuredSelector({\r\n    total: selectCartTotal,\r\n  });\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(PaymentPage)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}