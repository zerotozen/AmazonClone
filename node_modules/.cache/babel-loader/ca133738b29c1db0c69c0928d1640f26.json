{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst selectProduct = state => state.product;\n\nexport const selectCollections = createSelector([selectProduct], product => product.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => Object.keys(collections).map(key => collections[key]));\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null);\nexport const selectIsCollectionFetching = createSelector([selectProduct], shop => shop.isFetching);\nexport const selectIsCollectionsLoaded = createSelector([selectProduct], shop => !!shop.collections);","map":{"version":3,"sources":["C:/Users/AC/Desktop/ReactProjects/Amazon/amazon-clone-redux/src/redux/products/product.selectors.js"],"names":["createSelector","selectProduct","state","product","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","shop","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAWA,KAAK,CAACC,OAAvC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC7C,CAACC,aAAD,CAD6C,EAE5CE,OAAD,IAAaA,OAAO,CAACE,WAFwB,CAAxC;AAKP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACvD,CAACI,iBAAD,CADuD,EAEtDC,WAAD,IAAiBE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA8BC,GAAD,IAASL,WAAW,CAACK,GAAD,CAAjD,CAFsC,CAAlD;AAKP,OAAO,MAAMC,gBAAgB,GAAIC,kBAAD,IAC9BZ,cAAc,CAAC,CAACI,iBAAD,CAAD,EAAuBC,WAAD,IAClCA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IADpC,CADT;AAKP,OAAO,MAAMC,0BAA0B,GAAGb,cAAc,CACtD,CAACC,aAAD,CADsD,EAErDa,IAAD,IAAUA,IAAI,CAACC,UAFuC,CAAjD;AAKP,OAAO,MAAMC,yBAAyB,GAAGhB,cAAc,CACrD,CAACC,aAAD,CADqD,EAEpDa,IAAD,IAAU,CAAC,CAACA,IAAI,CAACT,WAFoC,CAAhD","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nconst selectProduct = (state) => state.product;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectProduct],\r\n  (product) => product.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  (collections) => Object.keys(collections).map((key) => collections[key])\r\n);\r\n\r\nexport const selectCollection = (collectionUrlParam) =>\r\n  createSelector([selectCollections], (collections) =>\r\n    collections ? collections[collectionUrlParam] : null\r\n  );\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n  [selectProduct],\r\n  (shop) => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n  [selectProduct],\r\n  (shop) => !!shop.collections\r\n);\r\n"]},"metadata":{},"sourceType":"module"}