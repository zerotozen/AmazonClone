{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AC\\\\Desktop\\\\ReactProjects\\\\Amazon\\\\amazon-clone-redux\\\\src\\\\pages\\\\payment-page\\\\payment-page.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { clearCart } from \"../../redux/cart/cart.action\";\nimport Popup from \"../../components/popup/popup.component\";\nimport HeaderImage1 from \"../../assets/address-page-heade1.png\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport axios from \"../../axios/axios\";\nimport { selectCartItems, selectCartTotal } from \"../../redux/cart/cart.selectors\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport \"./payment-page.styles.css\";\nimport { createStructuredSelector } from \"reselect\";\nimport { db } from \"../../firebase/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentPage = ({\n  history,\n  clearCart,\n  currentUser,\n  total,\n  cart\n}) => {\n  _s();\n\n  console.log(\"CARTTTTTTTTTTT\", cart);\n  const stripe = useStripe();\n  const elements = useElements();\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(\"\");\n  const [succeeded, setSucceeded] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(true);\n  const [popup, setPopup] = useState(false);\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const CARD_OPTIONS = {\n    iconStyle: \"solid\",\n    style: {\n      base: {\n        height: 100,\n        iconColor: \"#c4f0ff\",\n        color: \"black\",\n        fontWeight: 500,\n        fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n        fontSize: \"16px\",\n        fontSmoothing: \"antialiased\",\n        \":-webkit-autofill\": {\n          color: \"#fce883\"\n        },\n        \"::placeholder\": {\n          color: \"#87bbfd\"\n        }\n      },\n      invalid: {\n        iconColor: \"#ffc7ee\",\n        color: \"#ffc7ee\"\n      }\n    }\n  };\n  useEffect(() => {\n    //algo aqui\n    const getClientSecret = async () => {\n      const response = await axios({\n        method: \"post\",\n        url: `/payments/create?total=${total * 100}`\n      });\n      setClientSecret(response.data.clientSecret);\n    };\n\n    getClientSecret();\n  }, [total]);\n\n  const onFormSubmit = async data => {\n    console.log(\"DATAAAA\", data);\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    }).then(({\n      paymentIntent\n    }) => {\n      //paymentIntent = payment confirmation\n      db.collection(\"users\").doc(currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid).collection(\"orders\").doc(paymentIntent.id).set({\n        cart: [cart.brand, cart.descriptionTitle, cart.price, cart.quantity],\n        amount: paymentIntent.amount,\n        created: paymentIntent.created\n      });\n      setSucceeded(true);\n      setError(null);\n      setProcessing(false);\n      clearCart();\n    });\n    setPopup(true);\n    setTimeout(() => {\n      setPopup(false);\n      history.replace(\"/orders\");\n    }, 3000);\n  };\n\n  const onErrors = errors => alert(\"Complete the form\");\n\n  console.log(\"THE SECRETTTTT\", clientSecret);\n  console.log(\"USer\", currentUser);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paymentPage__container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paymentPage__subContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addressPage__header\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: HeaderImage1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"paymentPage__title\",\n        children: \"Select payment method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onFormSubmit, onErrors),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paymentPage__firstRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Name on Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"name\", {\n              required: true\n            }),\n            type: \"text\",\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Card Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"Card Number\", {\n              required: true\n            }),\n            type: \"text\",\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Expiration Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"expireDate__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expireDate__month\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"Month\", {\n                  required: true\n                }),\n                type: \"text\",\n                placeholder: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expireDate__year\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"Year\", {\n                  required: true\n                }),\n                type: \"text\",\n                placeholder: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paymentPage__secondRow\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"paymentPage__inputContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"CCV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"CCV\", {\n                required: true\n              }),\n              className: \"paymentPage__cityInput\",\n              type: \"text\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          // onClick={() => clearCart()}\n          className: \"paymentPage__button\",\n          type: \"submit\",\n          value: \"Submit Form\",\n          children: \"Place order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Popup, {\n          trigger: popup,\n          setTrigger: setPopup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n          options: CARD_OPTIONS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paymentPage__buttonContainer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaymentPage, \"y6xmc8NMZMT26GwnpnbrCHFCaAI=\", false, function () {\n  return [useStripe, useElements, useForm];\n});\n\n_c = PaymentPage;\n\nconst mapDispatchToProps = dispatch => ({\n  clearCart: () => dispatch(clearCart())\n});\n\nconst mapStateToProps = () => createStructuredSelector({\n  currentUser: selectCurrentUser,\n  total: selectCartTotal,\n  cart: selectCartItems\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PaymentPage));\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"sources":["C:/Users/AC/Desktop/ReactProjects/Amazon/amazon-clone-redux/src/pages/payment-page/payment-page.component.js"],"names":["React","useState","useEffect","useForm","withRouter","connect","clearCart","Popup","HeaderImage1","CardElement","useStripe","useElements","axios","selectCartItems","selectCartTotal","selectCurrentUser","createStructuredSelector","db","PaymentPage","history","currentUser","total","cart","console","log","stripe","elements","error","setError","processing","setProcessing","succeeded","setSucceeded","disabled","setDisabled","clientSecret","setClientSecret","popup","setPopup","register","handleSubmit","CARD_OPTIONS","iconStyle","style","base","height","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","getClientSecret","response","method","url","data","onFormSubmit","payload","confirmCardPayment","payment_method","card","getElement","then","paymentIntent","collection","doc","uid","id","set","brand","descriptionTitle","price","quantity","amount","created","setTimeout","replace","onErrors","errors","alert","required","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AAEA,OAAOC,KAAP,MAAkB,wCAAlB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AAEA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,yBAApD;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,SACEC,eADF,EAEEC,eAFF,QAGO,iCAHP;AAIA,SAASC,iBAAT,QAAkC,iCAAlC;AAEA,OAAO,2BAAP;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,EAAT,QAAmB,yBAAnB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWb,EAAAA,SAAX;AAAsBc,EAAAA,WAAtB;AAAmCC,EAAAA,KAAnC;AAA0CC,EAAAA;AAA1C,CAAD,KAAsD;AAAA;;AACxEC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,IAA9B;AACA,QAAMG,MAAM,GAAGf,SAAS,EAAxB;AACA,QAAMgB,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAAC4B,UAAD,EAAaC,aAAb,IAA8B7B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC8B,SAAD,EAAYC,YAAZ,IAA4B/B,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACgC,QAAD,EAAWC,WAAX,IAA0BjC,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACkC,YAAD,EAAeC,eAAf,IAAkCnC,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACoC,KAAD,EAAQC,QAAR,IAAoBrC,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAEsC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BrC,OAAO,EAA1C;AAEA,QAAMsC,YAAY,GAAG;AACnBC,IAAAA,SAAS,EAAE,OADQ;AAEnBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE,GADJ;AAEJC,QAAAA,SAAS,EAAE,SAFP;AAGJC,QAAAA,KAAK,EAAE,OAHH;AAIJC,QAAAA,UAAU,EAAE,GAJR;AAKJC,QAAAA,UAAU,EAAE,yCALR;AAMJC,QAAAA,QAAQ,EAAE,MANN;AAOJC,QAAAA,aAAa,EAAE,aAPX;AAQJ,6BAAqB;AACnBJ,UAAAA,KAAK,EAAE;AADY,SARjB;AAWJ,yBAAiB;AACfA,UAAAA,KAAK,EAAE;AADQ;AAXb,OADD;AAgBLK,MAAAA,OAAO,EAAE;AACPN,QAAAA,SAAS,EAAE,SADJ;AAEPC,QAAAA,KAAK,EAAE;AAFA;AAhBJ;AAFY,GAArB;AAyBA7C,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMmD,eAAe,GAAG,YAAY;AAClC,YAAMC,QAAQ,GAAG,MAAM1C,KAAK,CAAC;AAC3B2C,QAAAA,MAAM,EAAE,MADmB;AAE3BC,QAAAA,GAAG,EAAG,0BAAyBnC,KAAK,GAAG,GAAI;AAFhB,OAAD,CAA5B;AAIAe,MAAAA,eAAe,CAACkB,QAAQ,CAACG,IAAT,CAActB,YAAf,CAAf;AACD,KAND;;AAOAkB,IAAAA,eAAe;AAChB,GAVQ,EAUN,CAAChC,KAAD,CAVM,CAAT;;AAYA,QAAMqC,YAAY,GAAG,MAAOD,IAAP,IAAgB;AACnClC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBiC,IAAvB;AACA3B,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,UAAM6B,OAAO,GAAG,MAAMlC,MAAM,CACzBmC,kBADmB,CACAzB,YADA,EACc;AAChC0B,MAAAA,cAAc,EAAE;AACdC,QAAAA,IAAI,EAAEpC,QAAQ,CAACqC,UAAT,CAAoBtD,WAApB;AADQ;AADgB,KADd,EAMnBuD,IANmB,CAMd,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAuB;AAC3B;AACAhD,MAAAA,EAAE,CAACiD,UAAH,CAAc,OAAd,EACGC,GADH,CACO/C,WADP,aACOA,WADP,uBACOA,WAAW,CAAEgD,GADpB,EAEGF,UAFH,CAEc,QAFd,EAGGC,GAHH,CAGOF,aAAa,CAACI,EAHrB,EAIGC,GAJH,CAIO;AACHhD,QAAAA,IAAI,EAAE,CACJA,IAAI,CAACiD,KADD,EAEJjD,IAAI,CAACkD,gBAFD,EAGJlD,IAAI,CAACmD,KAHD,EAIJnD,IAAI,CAACoD,QAJD,CADH;AAOHC,QAAAA,MAAM,EAAEV,aAAa,CAACU,MAPnB;AAQHC,QAAAA,OAAO,EAAEX,aAAa,CAACW;AARpB,OAJP;AAeA5C,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAJ,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,MAAAA,aAAa,CAAC,KAAD,CAAb;AAEAxB,MAAAA,SAAS;AACV,KA5BmB,CAAtB;AA8BAgC,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAuC,IAAAA,UAAU,CAAC,MAAM;AACfvC,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAnB,MAAAA,OAAO,CAAC2D,OAAR,CAAgB,SAAhB;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GAtCD;;AAwCA,QAAMC,QAAQ,GAAIC,MAAD,IAAYC,KAAK,CAAC,mBAAD,CAAlC;;AAEA1D,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BW,YAA9B;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,WAApB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACE;AAAK,UAAA,GAAG,EAAC,EAAT;AAAY,UAAA,GAAG,EAAEZ;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF,eAOE;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAM,QAAA,QAAQ,EAAEgC,YAAY,CAACkB,YAAD,EAAeqB,QAAf,CAA5B;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,sBACMxC,QAAQ,CAAC,MAAD,EAAS;AAAE2C,cAAAA,QAAQ,EAAE;AAAZ,aAAT,CADd;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,kBAFF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE,sBACM3C,QAAQ,CAAC,aAAD,EAAgB;AAAE2C,cAAAA,QAAQ,EAAE;AAAZ,aAAhB,CADd;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,kBARF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eAcE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,sBACM3C,QAAQ,CAAC,OAAD,EAAU;AAAE2C,kBAAAA,QAAQ,EAAE;AAAZ,iBAAV,CADd;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,sBACM3C,QAAQ,CAAC,MAAD,EAAS;AAAE2C,kBAAAA,QAAQ,EAAE;AAAZ,iBAAT,CADd;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAkCE;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,6BAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,sBACM3C,QAAQ,CAAC,KAAD,EAAQ;AAAE2C,gBAAAA,QAAQ,EAAE;AAAZ,eAAR,CADd;AAEE,cAAA,SAAS,EAAC,wBAFZ;AAGE,cAAA,IAAI,EAAC,MAHP;AAIE,cAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAlCF,eA6CE;AACE;AACA,UAAA,SAAS,EAAC,qBAFZ;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,KAAK,EAAC,aAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7CF,eAqDE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAE7C,KAAhB;AAAuB,UAAA,UAAU,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBArDF,eAuDE,QAAC,WAAD;AAAa,UAAA,OAAO,EAAEG;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAvDF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAiEE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAjEF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuED,CApKD;;GAAMvB,W;UAEWR,S,EACEC,W,EAOkBR,O;;;KAV/Be,W;;AAsKN,MAAMiE,kBAAkB,GAAIC,QAAD,KAAe;AACxC9E,EAAAA,SAAS,EAAE,MAAM8E,QAAQ,CAAC9E,SAAS,EAAV;AADe,CAAf,CAA3B;;AAIA,MAAM+E,eAAe,GAAG,MACtBrE,wBAAwB,CAAC;AACvBI,EAAAA,WAAW,EAAEL,iBADU;AAEvBM,EAAAA,KAAK,EAAEP,eAFgB;AAGvBQ,EAAAA,IAAI,EAAET;AAHiB,CAAD,CAD1B;;AAOA,eAAeT,UAAU,CACvBC,OAAO,CAACgF,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CjE,WAA7C,CADuB,CAAzB","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { clearCart } from \"../../redux/cart/cart.action\";\r\n\r\nimport Popup from \"../../components/popup/popup.component\";\r\nimport HeaderImage1 from \"../../assets/address-page-heade1.png\";\r\n\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport axios from \"../../axios/axios\";\r\n\r\nimport {\r\n  selectCartItems,\r\n  selectCartTotal,\r\n} from \"../../redux/cart/cart.selectors\";\r\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\r\n\r\nimport \"./payment-page.styles.css\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { db } from \"../../firebase/firebase\";\r\n\r\nconst PaymentPage = ({ history, clearCart, currentUser, total, cart }) => {\r\n  console.log(\"CARTTTTTTTTTTT\", cart);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [error, setError] = useState(null);\r\n  const [processing, setProcessing] = useState(\"\");\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState(true);\r\n  const [popup, setPopup] = useState(false);\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const CARD_OPTIONS = {\r\n    iconStyle: \"solid\",\r\n    style: {\r\n      base: {\r\n        height: 100,\r\n        iconColor: \"#c4f0ff\",\r\n        color: \"black\",\r\n        fontWeight: 500,\r\n        fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\r\n        fontSize: \"16px\",\r\n        fontSmoothing: \"antialiased\",\r\n        \":-webkit-autofill\": {\r\n          color: \"#fce883\",\r\n        },\r\n        \"::placeholder\": {\r\n          color: \"#87bbfd\",\r\n        },\r\n      },\r\n      invalid: {\r\n        iconColor: \"#ffc7ee\",\r\n        color: \"#ffc7ee\",\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    //algo aqui\r\n    const getClientSecret = async () => {\r\n      const response = await axios({\r\n        method: \"post\",\r\n        url: `/payments/create?total=${total * 100}`,\r\n      });\r\n      setClientSecret(response.data.clientSecret);\r\n    };\r\n    getClientSecret();\r\n  }, [total]);\r\n\r\n  const onFormSubmit = async (data) => {\r\n    console.log(\"DATAAAA\", data);\r\n    setProcessing(true);\r\n    const payload = await stripe\r\n      .confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n        },\r\n      })\r\n      .then(({ paymentIntent }) => {\r\n        //paymentIntent = payment confirmation\r\n        db.collection(\"users\")\r\n          .doc(currentUser?.uid)\r\n          .collection(\"orders\")\r\n          .doc(paymentIntent.id)\r\n          .set({\r\n            cart: [\r\n              cart.brand,\r\n              cart.descriptionTitle,\r\n              cart.price,\r\n              cart.quantity,\r\n            ],\r\n            amount: paymentIntent.amount,\r\n            created: paymentIntent.created,\r\n          });\r\n\r\n        setSucceeded(true);\r\n        setError(null);\r\n        setProcessing(false);\r\n\r\n        clearCart();\r\n      });\r\n\r\n    setPopup(true);\r\n    setTimeout(() => {\r\n      setPopup(false);\r\n      history.replace(\"/orders\");\r\n    }, 3000);\r\n  };\r\n\r\n  const onErrors = (errors) => alert(\"Complete the form\");\r\n\r\n  console.log(\"THE SECRETTTTT\", clientSecret);\r\n  console.log(\"USer\", currentUser);\r\n  return (\r\n    <div className=\"paymentPage__container\">\r\n      <div className=\"paymentPage__subContainer\">\r\n        <div className=\"addressPage__header\">\r\n          <img alt=\"\" src={HeaderImage1}></img>\r\n        </div>\r\n        <h1 className=\"paymentPage__title\">Select payment method</h1>\r\n        <hr />\r\n        {}\r\n        <hr />\r\n        <form onSubmit={handleSubmit(onFormSubmit, onErrors)}>\r\n          <div className=\"paymentPage__firstRow\">\r\n            <span>Name on Card</span>\r\n            <input\r\n              {...register(\"name\", { required: true })}\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n            ></input>\r\n            <span>Card Number</span>\r\n            <input\r\n              {...register(\"Card Number\", { required: true })}\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n            ></input>\r\n            <span>Expiration Date</span>\r\n            <div className=\"expireDate__container\">\r\n              <div className=\"expireDate__month\">\r\n                <span>Month</span>\r\n                <input\r\n                  {...register(\"Month\", { required: true })}\r\n                  type=\"text\"\r\n                  placeholder=\"\"\r\n                ></input>\r\n              </div>\r\n              <div className=\"expireDate__year\">\r\n                <span>Year</span>\r\n                <input\r\n                  {...register(\"Year\", { required: true })}\r\n                  type=\"text\"\r\n                  placeholder=\"\"\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"paymentPage__secondRow\">\r\n            <div className=\"paymentPage__inputContainer\">\r\n              <span>CCV</span>\r\n              <input\r\n                {...register(\"CCV\", { required: true })}\r\n                className=\"paymentPage__cityInput\"\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <button\r\n            // onClick={() => clearCart()}\r\n            className=\"paymentPage__button\"\r\n            type=\"submit\"\r\n            value=\"Submit Form\"\r\n          >\r\n            Place order\r\n          </button>\r\n          <Popup trigger={popup} setTrigger={setPopup} />\r\n\r\n          <CardElement options={CARD_OPTIONS} />\r\n        </form>\r\n        <div className=\"paymentPage__buttonContainer\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  clearCart: () => dispatch(clearCart()),\r\n});\r\n\r\nconst mapStateToProps = () =>\r\n  createStructuredSelector({\r\n    currentUser: selectCurrentUser,\r\n    total: selectCartTotal,\r\n    cart: selectCartItems,\r\n  });\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(PaymentPage)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}