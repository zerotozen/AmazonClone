{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AC\\\\Desktop\\\\ReactProjects\\\\Amazon\\\\amazon-clone-redux\\\\src\\\\components\\\\sidenav-content\\\\sidenav-content.component.js\";\nimport React from \"react\";\nimport DropDown from \"../dropdown/dropdown.component\";\nimport SideNavRow from \"../siderow/sidenav-row.component\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectEntryStore, selectDropdownEntries } from \"../../redux/sidenav/sidenav.selectors\";\nimport { setDropDownEntries } from \"../../redux/sidenav/sidenav.actions\";\nimport { ComponentContainer, SidenavContentHeader, SidenavContent } from \"./sidenav-content.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SideNavContent = ({\n  entryStore,\n  dropDownEntries,\n  setDropDownEntries,\n  state\n}) => {\n  return /*#__PURE__*/_jsxDEV(ComponentContainer, {\n    className: \"sideNavContainer\" // style={\n    //   state === \"exiting\"\n    //     ? { animation: \"moveMainContainer .3s forwards\" }\n    //     : state === \"entering\"\n    //     ? { animation: \"moveMainContainer .3s reverse backwards\" }\n    //     : null\n    // }\n    ,\n    children: [entryStore && entryStore.map((entry, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SidenavContentHeader, {\n          className: \"sidenavContentHeader\",\n          children: entry.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), // eslint-disable-next-line\n        entry.entries.map((subEntry, index) => {\n          if (subEntry.type) {\n            !dropDownEntries && setDropDownEntries(index);\n            return /*#__PURE__*/_jsxDEV(DropDown, {\n              entries: entry.entries.slice(index + 1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 23\n            }, this);\n          } else if (dropDownEntries && index < dropDownEntries) {\n            return !entry.type.rows ?\n            /*#__PURE__*/\n            // eslint-disable-next-line\n            _jsxDEV(\"a\", {\n              href: \"#\",\n              children: /*#__PURE__*/_jsxDEV(SidenavContent, {\n                className: \"sidenavContent\",\n                children: subEntry.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(SideNavRow, {\n              text: subEntry.title,\n              entries: subEntry.entries\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 23\n            }, this);\n          }\n        }), index !== entryStore.length - 1 && /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: \"60px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SideNavContent;\n\nconst mapStateToProps = () => createStructuredSelector({\n  entryStore: selectEntryStore,\n  dropDownEntries: selectDropdownEntries\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setDropDownEntries: index => dispatch(setDropDownEntries(index))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNavContent);\n\nvar _c;\n\n$RefreshReg$(_c, \"SideNavContent\");","map":{"version":3,"sources":["C:/Users/AC/Desktop/ReactProjects/Amazon/amazon-clone-redux/src/components/sidenav-content/sidenav-content.component.js"],"names":["React","DropDown","SideNavRow","connect","createStructuredSelector","selectEntryStore","selectDropdownEntries","setDropDownEntries","ComponentContainer","SidenavContentHeader","SidenavContent","SideNavContent","entryStore","dropDownEntries","state","map","entry","index","title","entries","subEntry","type","slice","rows","length","minHeight","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SACEC,gBADF,EAEEC,qBAFF,QAGO,uCAHP;AAIA,SAASC,kBAAT,QAAmC,qCAAnC;AAEA,SACEC,kBADF,EAEEC,oBAFF,EAGEC,cAHF,QAIO,0BAJP;;;;AAMA,MAAMC,cAAc,GAAG,CAAC;AACtBC,EAAAA,UADsB;AAEtBC,EAAAA,eAFsB;AAGtBN,EAAAA,kBAHsB;AAItBO,EAAAA;AAJsB,CAAD,KAKjB;AACJ,sBACE,QAAC,kBAAD;AACE,IAAA,SAAS,EAAC,kBADZ,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AARF;AAAA,eAUGF,UAAU,IACTA,UAAU,CAACG,GAAX,CAAe,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC/B,0BACE;AAAA,gCACE,QAAC,oBAAD;AAAsB,UAAA,SAAS,EAAC,sBAAhC;AAAA,oBACGD,KAAK,CAACE;AADT;AAAA;AAAA;AAAA;AAAA,gBADF,EAKI;AACAF,QAAAA,KAAK,CAACG,OAAN,CAAcJ,GAAd,CAAkB,CAACK,QAAD,EAAWH,KAAX,KAAqB;AACrC,cAAIG,QAAQ,CAACC,IAAb,EAAmB;AACjB,aAACR,eAAD,IAAoBN,kBAAkB,CAACU,KAAD,CAAtC;AACA,gCACE,QAAC,QAAD;AAAU,cAAA,OAAO,EAAED,KAAK,CAACG,OAAN,CAAcG,KAAd,CAAoBL,KAAK,GAAG,CAA5B;AAAnB;AAAA;AAAA;AAAA;AAAA,oBADF;AAGD,WALD,MAKO,IAAIJ,eAAe,IAAII,KAAK,GAAGJ,eAA/B,EAAgD;AACrD,mBAAO,CAACG,KAAK,CAACK,IAAN,CAAWE,IAAZ;AAAA;AACL;AACA;AAAG,cAAA,IAAI,EAAC,GAAR;AAAA,qCACE,QAAC,cAAD;AAAgB,gBAAA,SAAS,EAAC,gBAA1B;AAAA,0BACGH,QAAQ,CAACF;AADZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFK,gBAQL,QAAC,UAAD;AACE,cAAA,IAAI,EAAEE,QAAQ,CAACF,KADjB;AAEE,cAAA,OAAO,EAAEE,QAAQ,CAACD;AAFpB;AAAA;AAAA;AAAA;AAAA,oBARF;AAaD;AACF,SArBD,CANJ,EA6BGF,KAAK,KAAKL,UAAU,CAACY,MAAX,GAAoB,CAA9B,iBAAmC;AAAA;AAAA;AAAA;AAAA,gBA7BtC;AAAA,sBADF;AAiCD,KAlCD,CAXJ,eA8CE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AAAZ;AAAA;AAAA;AAAA;AAAA,YA9CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD,CAxDD;;KAAMd,c;;AA0DN,MAAMe,eAAe,GAAG,MACtBtB,wBAAwB,CAAC;AACvBQ,EAAAA,UAAU,EAAEP,gBADW;AAEvBQ,EAAAA,eAAe,EAAEP;AAFM,CAAD,CAD1B;;AAMA,MAAMqB,kBAAkB,GAAIC,QAAD,KAAe;AACxCrB,EAAAA,kBAAkB,EAAGU,KAAD,IAAWW,QAAQ,CAACrB,kBAAkB,CAACU,KAAD,CAAnB;AADC,CAAf,CAA3B;;AAIA,eAAed,OAAO,CAACuB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6ChB,cAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport DropDown from \"../dropdown/dropdown.component\";\r\nimport SideNavRow from \"../siderow/sidenav-row.component\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  selectEntryStore,\r\n  selectDropdownEntries,\r\n} from \"../../redux/sidenav/sidenav.selectors\";\r\nimport { setDropDownEntries } from \"../../redux/sidenav/sidenav.actions\";\r\n\r\nimport {\r\n  ComponentContainer,\r\n  SidenavContentHeader,\r\n  SidenavContent,\r\n} from \"./sidenav-content.styles\";\r\n\r\nconst SideNavContent = ({\r\n  entryStore,\r\n  dropDownEntries,\r\n  setDropDownEntries,\r\n  state,\r\n}) => {\r\n  return (\r\n    <ComponentContainer\r\n      className=\"sideNavContainer\"\r\n      // style={\r\n      //   state === \"exiting\"\r\n      //     ? { animation: \"moveMainContainer .3s forwards\" }\r\n      //     : state === \"entering\"\r\n      //     ? { animation: \"moveMainContainer .3s reverse backwards\" }\r\n      //     : null\r\n      // }\r\n    >\r\n      {entryStore &&\r\n        entryStore.map((entry, index) => {\r\n          return (\r\n            <>\r\n              <SidenavContentHeader className=\"sidenavContentHeader\">\r\n                {entry.title}\r\n              </SidenavContentHeader>\r\n              {\r\n                // eslint-disable-next-line\r\n                entry.entries.map((subEntry, index) => {\r\n                  if (subEntry.type) {\r\n                    !dropDownEntries && setDropDownEntries(index);\r\n                    return (\r\n                      <DropDown entries={entry.entries.slice(index + 1)} />\r\n                    );\r\n                  } else if (dropDownEntries && index < dropDownEntries) {\r\n                    return !entry.type.rows ? (\r\n                      // eslint-disable-next-line\r\n                      <a href=\"#\">\r\n                        <SidenavContent className=\"sidenavContent\">\r\n                          {subEntry.title}\r\n                        </SidenavContent>\r\n                      </a>\r\n                    ) : (\r\n                      <SideNavRow\r\n                        text={subEntry.title}\r\n                        entries={subEntry.entries}\r\n                      />\r\n                    );\r\n                  }\r\n                })\r\n              }\r\n              {index !== entryStore.length - 1 && <hr />}\r\n            </>\r\n          );\r\n        })}\r\n      <div style={{ minHeight: \"60px\" }}></div>\r\n    </ComponentContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = () =>\r\n  createStructuredSelector({\r\n    entryStore: selectEntryStore,\r\n    dropDownEntries: selectDropdownEntries,\r\n  });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setDropDownEntries: (index) => dispatch(setDropDownEntries(index)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNavContent);\r\n"]},"metadata":{},"sourceType":"module"}